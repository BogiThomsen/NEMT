swagger: "2.0"

info:
  title: "API"
  description: description of api
  version: "1.0"

basePath: /api

paths:
  /users:
    post:
      summary: Returns a string.
      description: Optional extended description in CommonMark or HTML.
      operationId: user_api.add_user
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          description: The user to create.
          schema:
            type: object
            required:
              - username
              - password
              - access_token
            properties:
              username:
                type: string
              password:
                type: string
              access_token:
                type: string
      responses:
        200:    # status code
          description: A user
  /users/{id}:
    get:
      summary: Returns a user.
      description: Optional extended description in CommonMark or HTML.
      operationId: user_api.get_user
      responses:
        200:    # status code
          description: User was returned successfuly
      parameters:
        - $ref: '#/parameters/id'
    patch:
      summary: patches user info
      operationId: user_data_access.patch_user
      parameters:
        - $ref: '#/parameters/patchUser'
      responses:
        200:    #status code
          description: user was patched successfully
    delete:
      summary: Deletes a user.
      description: Optional extended description in CommonMark or HTML.
      operationId: user_api.delete_user
      parameters:
        - $ref: '#/parameters/id'
      responses:
        200:    # status code
          description: A string
  /users/getId/{username}:
    get:
      summary: Returns a user_id.
      description: Optional extended description in CommonMark or HTML.
      operationId: user_api.get_user_id
      responses:
        200:    # status code
          description: User was returned successfuly
      parameters:
        - $ref: '#/parameters/username'

parameters:
  id:
    name: id
    description: a user id
    in: path
    type: string
    required: true
  username:
    name: username
    description: a username
    in: path
    type: string
    required: true
  patchUser:
    in: body
    name: userInfo
    description: User info to be patched
    schema:
      type: object
      required:
        - userId
        - operation
      properties:
        userId:
          type: string
        username:
          type: string
        operation:
          type: boolean
        password:
          type: string
        device:
          type: string
        rule:
          type: string
        grouping:
          type: string
        other_device:
          type: string

  
